<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Indie Developer on Noverse</title><link>https://noverse.github.io/tags/indie-developer/</link><description>Recent content in Indie Developer on Noverse</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 12 Feb 2012 21:10:00 -0400</lastBuildDate><atom:link href="https://noverse.github.io/tags/indie-developer/index.xml" rel="self" type="application/rss+xml"/><item><title>End of Life - Sights to See and Emergency List</title><link>https://noverse.github.io/blog/2012/02/12/end-of-life-sights-to-see-and-emergency-list/</link><pubDate>Sun, 12 Feb 2012 21:10:00 -0400</pubDate><guid>https://noverse.github.io/blog/2012/02/12/end-of-life-sights-to-see-and-emergency-list/</guid><description>Noverse is sad to announce that we have taken down Emergency List and Sights to See from the iPhone App Store.
What? Really? Why? These apps were developed two years ago, for old versions of the iPhone, and no longer represent the best we can do. We were learning iOS at the time, did not have access to the right designers and did the best we could back then. It got us the business we did the last 2 years.</description></item><item><title>Get it Brilliant</title><link>https://noverse.github.io/blog/2011/09/17/get-it-brilliant/</link><pubDate>Sat, 17 Sep 2011 13:33:00 -0400</pubDate><guid>https://noverse.github.io/blog/2011/09/17/get-it-brilliant/</guid><description>When it comes to software, there should be no such thing as &amp;lsquo;good enough&amp;rsquo; software. Yet most software fits this bill, it does something &amp;lsquo;good enough&amp;rsquo; to get the work done or even sell. Even though the user has to jump through hoops to do so, or create workarounds to make the whole thing work.
At Noverse, we don&amp;rsquo;t make &amp;lsquo;good enough&amp;rsquo; software. Our products must be brilliant, they must be flexible, they must be proven correct, they must get the job done without workarounds, they must be fast and easy to use, they must be amazing.</description></item><item><title>Keeping Customers Engaged Early</title><link>https://noverse.github.io/blog/2011/05/13/keeping-customers-engaged-early/</link><pubDate>Fri, 13 May 2011 17:27:00 -0400</pubDate><guid>https://noverse.github.io/blog/2011/05/13/keeping-customers-engaged-early/</guid><description>The early stages of a software development project are brilliant for a designer/developer and painful for a customer. For the developer, the challenge of design, the joy of programming the core functionality, and the absolute bliss you get from making something great keeps the developer engaged. The customer sits and waits. And waits.
Traditionally, that wait lasts a long time, all the way until Alpha builds are available. Even with agile programming techniques, there really isn&amp;rsquo;t much to show the customer during the early stages.</description></item><item><title>Time and Material Contracts, with a Process</title><link>https://noverse.github.io/blog/2011/04/05/time-and-material-contracts-with-a-process/</link><pubDate>Tue, 05 Apr 2011 11:48:00 -0400</pubDate><guid>https://noverse.github.io/blog/2011/04/05/time-and-material-contracts-with-a-process/</guid><description>Call in a contractor to fix a hole in your roof. On a fixed price contract, they will rush to the roof, staple a plastic sheet over the hole and be done in 10 minutes. On a time and materials contract, they will wait for permission to go onto the roof, and sit up there for hours texting their mates, then staple the plastic sheet. On an equity share contract, they will move in, and place a bucket under the hole.</description></item><item><title>Reviews are not Support Requests</title><link>https://noverse.github.io/blog/2011/03/21/reviews-are-not-support-requests/</link><pubDate>Mon, 21 Mar 2011 11:13:00 -0400</pubDate><guid>https://noverse.github.io/blog/2011/03/21/reviews-are-not-support-requests/</guid><description>One of the biggest things missing in the iTunes App Store is the ability for the developer of an app to respond to complaints raised in the reviews section of their app.
We all know that the purpose of a review is to document an honest experience with a product. We all also should know that every app on the store has a support link, where customers are supposed to go to report any issues, errors or problems, or to ask questions of the developer.</description></item><item><title>Delivering Solutions: Corporate, Appliance or Hosted</title><link>https://noverse.github.io/blog/2011/01/21/delivering-solutions-corporate-appliance-or-hosted/</link><pubDate>Fri, 21 Jan 2011 16:22:00 -0400</pubDate><guid>https://noverse.github.io/blog/2011/01/21/delivering-solutions-corporate-appliance-or-hosted/</guid><description>I have just spent the past few weeks working on the initial design of a new product for Noverse. The question was how to deliver the solution to our customers. We could:
Install it on their infrastructure - lets call that the &amp;ldquo;Corporate Model&amp;rdquo; Deliver a prebuilt computer with the software on it - lets call that the &amp;ldquo;Appliance Model&amp;rdquo; Host it on our gear accessible over the internet - lets call it the &amp;ldquo;Hosted Model&amp;rdquo; Lets look at each in turn.</description></item><item><title>It takes a Software Designer</title><link>https://noverse.github.io/blog/2010/12/16/it-takes-a-software-designer/</link><pubDate>Thu, 16 Dec 2010 18:39:00 -0400</pubDate><guid>https://noverse.github.io/blog/2010/12/16/it-takes-a-software-designer/</guid><description>In many of my articles, I talk about the Software Designer, I even call myself one. But what does this mythical person do? Are they a graphics designer? An architect? A consultant?
A software designer is an individual who has the vision, passion, communication, understanding, flexibility and process to generate software form; and make the necessary decisions about what, when, where and how in development.
Note that the designer does not necessarily conceptualize the idea.</description></item><item><title>A Few Good Men</title><link>https://noverse.github.io/blog/2010/12/11/a-few-good-men/</link><pubDate>Sat, 11 Dec 2010 11:32:00 -0400</pubDate><guid>https://noverse.github.io/blog/2010/12/11/a-few-good-men/</guid><description>With apologies to the movie A Few Good Men, 1992, directed by Rob Reiner.
The right team size for software development. How many people does it take to develop a Software Product? How big a team will I need to create to tools for my business? I need to migrate this legacy software to a new platform, how many programmers will I need?
These are common questions asked of CTO&amp;rsquo;s, IT Consultants, startups, techies and, of course, me.</description></item><item><title>How much does it cost to develop an iPhone application?</title><link>https://noverse.github.io/blog/2010/12/01/how-much-does-it-cost-to-develop-an-iphone-application/</link><pubDate>Wed, 01 Dec 2010 13:59:00 -0400</pubDate><guid>https://noverse.github.io/blog/2010/12/01/how-much-does-it-cost-to-develop-an-iphone-application/</guid><description>This question was asked, and answered, on stackoverflow.com 2 years ago, and has been viewed almost 200,000 times. I was one of the people who answered the question (click here).
There are three components in almost every iPhone app: a server component, a design component and an app component.
Server Component The server component of an iPhone app usually takes the most effort and chews up the majority of the budget.</description></item><item><title>Waterfall Waterfail</title><link>https://noverse.github.io/blog/2010/10/28/waterfall-waterfail/</link><pubDate>Thu, 28 Oct 2010 01:38:00 -0400</pubDate><guid>https://noverse.github.io/blog/2010/10/28/waterfall-waterfail/</guid><description>The waterfall model for software development has gone the way of the dodo (and did so at about the same time). Yet this newly minted indie developer often gets requests for proposals that follow this model, fixed-time, fixed-process and fixed-price.
I instantly and politely decline these requests.
I don&amp;rsquo;t ever want to decline work, and when I set up this business, I planned to say yes to every potential client and service them as best as possible.</description></item><item><title>Sprint Coding</title><link>https://noverse.github.io/blog/2010/10/15/sprint-coding/</link><pubDate>Fri, 15 Oct 2010 13:42:00 -0400</pubDate><guid>https://noverse.github.io/blog/2010/10/15/sprint-coding/</guid><description>Sprint Coding is the process whereby a skilled programmer busts out a quality application in record time.
Its not easy. Fast coding means faster bugs. Quick coding means rotten quality. Rapid development means architecture is ignored. Cowboy coding produces unmaintainable code. In short, I don&amp;rsquo;t recommend it.
But, my dear padawan, it is do-able under the right circumstances. Rare circumstances. Recommend this, I do not.
Scenario, this is. A client called up at the beginning of October and asked if I could produce an iPhone app for them.</description></item><item><title>Sights to See iPad Version Progress, Part 1</title><link>https://noverse.github.io/blog/2010/09/30/sights-to-see-ipad-version-progress-part-1/</link><pubDate>Thu, 30 Sep 2010 17:04:00 -0400</pubDate><guid>https://noverse.github.io/blog/2010/09/30/sights-to-see-ipad-version-progress-part-1/</guid><description>The iPad version of Sights to See is coming along nicely. All the views have been strung together and I&amp;rsquo;m starting to work on the details and aesthetics.
Here are a few screenshots to whet your appetite.
When you start the app, you&amp;rsquo;ll see a world map with all your guides on it. I am also experimenting with a &amp;rsquo;tag cloud&amp;quot; approach to help you jump to a guide quickly, but it may not make it into the final product.</description></item><item><title>How to use software</title><link>https://noverse.github.io/blog/2010/09/09/how-to-use-software/</link><pubDate>Thu, 09 Sep 2010 13:03:00 -0400</pubDate><guid>https://noverse.github.io/blog/2010/09/09/how-to-use-software/</guid><description>I was having a discussion the other day about my next OS X application and the responses I got were that there was a free web way or a free command line way to do what my app will do, so why bother?
It got me thinking about how I use software, how other people use software, how people tell me how to use software and how I tell other people how to use software.</description></item><item><title>The post shipping, app store review blues</title><link>https://noverse.github.io/blog/2010/08/20/the-post-shipping-app-store-review-blues/</link><pubDate>Fri, 20 Aug 2010 09:55:00 -0400</pubDate><guid>https://noverse.github.io/blog/2010/08/20/the-post-shipping-app-store-review-blues/</guid><description>Real programmers ship. I did, ten days ago, into the App Store review process. And now I have the postnatal shipping blues.
The blues come from two sources, shipping and waiting.
shipping blues The first version of an application always ships, if you do it right, with the critical core features working, one or two bells and whistles to make it fun and nothing else. Do any more, and you&amp;rsquo;ll never ship.</description></item><item><title>The price of Sights to See</title><link>https://noverse.github.io/blog/2010/08/11/the-price-of-sights-to-see/</link><pubDate>Wed, 11 Aug 2010 11:49:00 -0400</pubDate><guid>https://noverse.github.io/blog/2010/08/11/the-price-of-sights-to-see/</guid><description>Choosing a price for your software is hard. Choosing the right price is even harder.
For Sights to See, I will release it at $9.99.
Let the wailing begin!
Customer value proposition From a customer&amp;rsquo;s perspective the value proposition is easy to figure out.
If the customer buys a paper guide book, it costs about $20.00 from Amazon. The paper guide book is limited to only the places in it, weighs a lot, is hard to navigate and to navigate with, and is usually out of date.</description></item><item><title>Beta testing is hard, but oh so worth it</title><link>https://noverse.github.io/blog/2010/07/31/beta-testing-is-hard-but-oh-so-worth-it/</link><pubDate>Sat, 31 Jul 2010 13:24:00 -0400</pubDate><guid>https://noverse.github.io/blog/2010/07/31/beta-testing-is-hard-but-oh-so-worth-it/</guid><description>So you&amp;rsquo;ve built the next killer app, and it looks and feels and works exactly how you dreamed, designed, planned and sweated to make it. Even the non-programming stuff is as brilliant as you can make it, the web site, the artwork, the documentation and the press goodies. As far as you are concerned, it&amp;rsquo;s ready to ship - and real developers ship after all.
Not so fast, bucakaroo! Best to beta test first.</description></item><item><title>One Two Four Eight - The Indie Developer's Life</title><link>https://noverse.github.io/blog/2010/05/24/one-two-four-eight-the-indie-developers-life/</link><pubDate>Mon, 24 May 2010 12:17:00 -0400</pubDate><guid>https://noverse.github.io/blog/2010/05/24/one-two-four-eight-the-indie-developers-life/</guid><description>Instructions: For timespan, insert day, week, month, year, eon or parsec. Use the same timespan for each section.
Build Version 1.0 Core features only, focus on the primary need
One timespan to write the core feature and prove the application.
Two timespans to add the minimum and absolutely necessary features to give the application Version 1.0 functionality and no more.
Four timespans to get it stable, fast and mostly bug free.</description></item><item><title>App Sales, free vs 99c</title><link>https://noverse.github.io/blog/2010/05/15/app-sales-free-vs-99c/</link><pubDate>Sat, 15 May 2010 11:57:00 -0400</pubDate><guid>https://noverse.github.io/blog/2010/05/15/app-sales-free-vs-99c/</guid><description>I ran a test while on vacation. For the 3.5 weeks I was away, I changed the price of Emergency List from free to 99c to see how this would affect sales.
It did.
A lot.
Before the price change, I had daily sales in the tens of units.
After the price change, I had three sales in 3.5 weeks. Zero sales every other day.
So I set the price back to zero two days ago, just to see what would happen.</description></item><item><title>Use Source Code Control, even when working on your own</title><link>https://noverse.github.io/blog/2010/02/01/use-source-code-control-even-when-working-on-your-own/</link><pubDate>Mon, 01 Feb 2010 17:37:00 -0400</pubDate><guid>https://noverse.github.io/blog/2010/02/01/use-source-code-control-even-when-working-on-your-own/</guid><description>I use a source code control system (SCCS) from day one on all my projects, even when I am working alone. Here are some of the reasons why.
Backup I run a SCCS server on a separate computer, not my development box, so that all my brilliant code is stored safely on a second computer. If anything happens to my primary development box, no dramas, I can get the code back from the server.</description></item><item><title>First Draft Application Design - Emergency List</title><link>https://noverse.github.io/blog/2010/01/25/first-draft-application-design-emergency-list/</link><pubDate>Mon, 25 Jan 2010 15:21:00 -0400</pubDate><guid>https://noverse.github.io/blog/2010/01/25/first-draft-application-design-emergency-list/</guid><description>We know what I want to develop, see The First Application - Emergency List. As its an iPhone app, the first step is to draw up the user interface. In this post we&amp;rsquo;ll look at a mockup of the interface and some of the thinking behind it.
The Interface - Favorites The first requirement is that it should take only two taps to call an emergency number, tap once to launch the app, tap again to call the emergency number.</description></item><item><title>The First Application - Emergency List</title><link>https://noverse.github.io/blog/2010/01/20/the-first-application-emergency-list/</link><pubDate>Wed, 20 Jan 2010 12:40:00 -0400</pubDate><guid>https://noverse.github.io/blog/2010/01/20/the-first-application-emergency-list/</guid><description>Most people I know, especially the elderly and those with kids, have a piece of paper taped to their landline phones containing a list of emergency or key contact numbers. That way, when needed, the number needed is easily found, and anyone can dial it.
I intend to create an iPhone application to do this.
Problems it will Solve Calling the right number in an emergency very very quickly without having to search for it Finding the necessary supporting information when making an emergency call Sharing the list and keeping it up to date Key Features and Benefits Feature 1: Two taps to call the top emergency contacts - I&amp;rsquo;d like the top 5 emergency numbers to be presented on startup, allowing the user to tap to launch the app, then tap an entry to dial.</description></item><item><title>Becoming Better</title><link>https://noverse.github.io/blog/2010/01/18/becoming-better/</link><pubDate>Mon, 18 Jan 2010 17:22:00 -0400</pubDate><guid>https://noverse.github.io/blog/2010/01/18/becoming-better/</guid><description>I created this site and its blog for two purposes, to document the thoughts and experiences of a new indie application developer and to share the lessons I have learned designing and developing software over the past 20 years. At first glance, these two so not seem to intersect.
Being an Indie Developer It is my intention to design and develop a set of Macintosh and iPhone based applications that are truly useful to people, well designed, seamlessly integrated, look brilliant and most importantly do what they are supposed to do best.</description></item></channel></rss>